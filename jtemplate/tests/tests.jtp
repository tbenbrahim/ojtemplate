
var main=function(){
    var results=[];

    import 'suites/test_parser.jtp';
    results.push(runSuite(testSuite));

    import 'suites/test_scope.jtp';
    results.push(runSuite(testSuite));

    import 'suites/test_precedence.jtp';
    results.push(runSuite(testSuite));

    import 'suites/test_interpreter.jtp';
    results.push(runSuite(testSuite));

    import 'suites/test_lib_builtin.jtp';
    results.push(runSuite(testSuite));

    import 'suites/test_lib_string.jtp';
    results.push(runSuite(testSuite));

    println();
    println('=======');
    println('SUMMARY:');
    println('=======');
    var total=var pass=0;
    foreach(result in results){
        total=total+result.total;
        pass=pass+result.pass;
        println(result.name,': ',result.pass,'/',result.total,' ',status_descr(result.pass,result.total));
    }
    println();
    println('ALL TESTS: ',pass,'/',total,' ',status_descr(pass,total));
};

var runSuite=function(suite){
    var numPass=0;
    var numTests=0;
    println();
    println('Running test suite: ', suite.description);
    foreach(test in suite.tests){
        numTests = numTests + 1;
        print('    -', test.description,' ');
        var result=false;
        try{
        	result=test.test();
        }catch(e){
        	println(' *exception ',e,' thrown');
        	result=false;
        }
        if (typeof(result)!='boolean'){
        	println('FAIL');
        	println('         *test did not return a boolean value, but a ',typeof(result));
        }else if (result){
            println('PASS');
            numPass=numPass+1;
        }else println('FAIL');
    }
    println(numPass,'/',numTests,' passed ',suite.description,' ',status_descr(numPass,numTests));
    return {name: suite.description,pass: numPass,total: numTests};
};

var status_descr=function(x,y){
    if(x==y) return 'PASS';
    else return 'FAIL';
};

main();

