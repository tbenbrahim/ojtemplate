var testSuite={
    description: 'String library tests',
    tests: [
            {
            	description: 'toUppercase()',
            	test: function(){
            		var a='abcDef'; return a.toUppercase()=='ABCDEF';
            	}
            },{
            	description: 'toLowercase()',
            	test: function(){
        			var a='abcDef'; return a.toLowercase()=='abcdef';
            	}
            },{
            	description: 'toFirstUpper()',
            	test: function(){
        			var a='abcDef'; return a.toFirstUpper()=='AbcDef';
            	}
            },{
            	description: 'toFirstLower()',
            	test: function(){
        			var a='AbcDef'; return a.toFirstLower()=='abcDef';
            	}
            },{
            	description: 'length()',
            	test: function(){
        			var a='abcDef'; var b='';
        			return a.length()==6 && b.length()==0;
            	}
            },{
            	description: 'charAt()',
            	test: function(){
        			var a='AbcDef'; return a.charAt(3)=='D';
            	}
            },{
            	description: 'charAt() with out of range index throws library error',
            	test: function(){
            		try{
            			var a='AbcDef'; 
            			a.charAt(11);
            			return false;
            		}catch (e){
            			return e.startsWith('invalid index');
            		}
            	}
            },{
            	description: 'charAt() with non integer index throws library error',
            	test: function(){
            		try{
            			var a='AbcDef'; 
            			a.charAt(true);
            			return false;
            		}catch (e){
            			return true;
            		}
            	}
            },{
            	description: 'indexOf()',
            	test: function(){
        			var a='AbcDef'; 
        			return a.indexOf('X')==-1 &&
        			a.indexOf('cD')==2;
            	}
            },{
            	description: 'substr()',
            	test: function(){
        			var a='AbcDef'; return a.substr(2,3)=='cDe';
            	}
            },{
            	description: 'substr() with invalid type start throws exception',
            	test: function(){
	        		try{
	        			'AbcDef'.substr('a',3);
	        			return false;
	        		}catch(e){
	        			return true;
	        		}
            	}
            },{
            	description: 'substr() with invalid type length throws exception',
            	test: function(){
	        		try{
	        			'AbcDef'.substr(3,'a');
	        			return false;
	        		}catch(e){
	        			return true;
	        		}
            	}
            },{
            	description: 'substr() with out of range start/length throws exception',
            	test: function(){
            		try{
            			'AbcDef'.substr(10,3);
            			return false;
            		}catch(e){
            			return true;
            		}
            	}
            },{
            	description: 'startsWith()',
            	test: function(){
        			var a='AbcDef'; 
        			return a.startsWith('Abc') && !a.startsWith('abc');
            	}
            },{
            	description: 'endsWith()',
            	test: function(){
        			var a='AbcDef'; 
        			return a.endsWith('ef') && !a.endsWith('def');
            	}
            },{
            	description: 'replaceAll()',
            	test: function(){
        			var a='1.343.34.2'; 
        			return a.replaceAll('.','')=='1343342';
            	}
            },{
            	description: 'split()',
            	test: function(){
        			var a='1.343.34.2'; 
        			return a.split('.')==['1','343','34','2'];
            	}
            }
    ]};